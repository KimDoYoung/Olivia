<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kalpa.olivia.repository.FileboxRepository">

   <insert id="insertNode" parameterType="FbNode" useGeneratedKeys="true" keyProperty="nodeId">
    /* insertNode : fb_node테이블에 insrt */
	INSERT INTO public.fb_node
		(node_type, parent_id, owner_id, node_name, owner_auth, group_auth, guest_auth, create_on, create_by)
	VALUES
		(#{nodeType}, #{parentId}, #{ownerId}, #{nodeName}, 'RWX'::bpchar, 'RWX'::bpchar, 'RWX'::bpchar, CURRENT_TIMESTAMP, #{createBy})
	RETURNING node_id
   </insert>   
   
   <resultMap id="FileboxResultMap" type="Filebox">
	    <id property="boxId" column="box_id" />
	    <result property="parentId" column="parent_id" />
	    <result property="folderNm" column="folder_nm" />
	    <result property="note" column="note" />
	    <result property="createOn" column="create_on" />
	    <result property="createBy" column="create_by" />
	    <result property="level" column="level" />
	    <result property="path" column="path" typeHandler="kr.co.kalpa.olivia.utils.mybatis.typehandler.IntegerArrayTypeHandler" />
	</resultMap>
   <select id="subNodeList" parameterType="Integer" resultMap="FileboxResultMap">
		WITH RECURSIVE subfolders (box_id, parent_id, folder_nm, note, create_on, create_by, level, path, cycle) 
		AS(
		   SELECT f.box_id, f.parent_id, f.folder_nm, f.note,f.create_on, f.create_by, 0, ARRAY[f.box_id], false
		   FROM public.file_box f
		   WHERE f.parent_id = #{value}
		   UNION ALL
		   SELECT d.box_id, d.parent_id, d.folder_nm, d.note,d.create_on, d.create_by, level + 1, path || d.box_id, d.box_id = ANY(path)
		   FROM public.file_box d, subfolders s
		   WHERE d.parent_id = s.box_id
		   AND NOT CYCLE
		)
		SELECT 
			box_id 
			,parent_id 
			,folder_nm 
			,note 
			,create_on 
			,create_by 
			,level 
			,path
		FROM subfolders
		--where parent_id = 1
		ORDER BY path
   </select>
   
   <select id="selectFiles" parameterType="Long" resultType="FbFile">
    /* selectFiles : fb_file에서 조회 */
    SELECt
	      file_id 	   AS fileId 
		, node_id      AS nodeId      
		, phy_folder   AS phyFolder  
		, phy_name     AS phyName    
		, org_name     AS orgName    
		, mime_type    AS mimeType   
		, file_size    AS fileSize   
		, ext          AS ext        
		, note         AS note       
		, width        AS width      
		, height       AS height     
		, status       AS status     
		, create_on    AS createOn   
		, create_by    AS createBy
    from
    	fb_file
    where 1=1
    	AND status != 'D'
    	AND node_id = #{value}
   </select>
   
   <insert id="insertFile" parameterType="FbFile"  useGeneratedKeys="true" keyProperty="fileId">
   /* insertFile :  fb_file에 1레코드 추가한다. 새로추가된 id를 셋팅한다 */
	INSERT INTO public.fb_file
	(node_id, phy_folder, phy_name, org_name, mime_type, file_size, ext, note, width, height, status, create_on, create_by)
	VALUES
	(#{nodeId}, #{phyFolder}, #{phyName}, #{orgName}, #{mimeType}, #{fileSize}, #{ext}, #{note}, #{width}, #{height}, #{status}, CURRENT_TIMESTAMP, #{createBy})
	RETURNING file_id 	  
   </insert>   
   
   <delete id="deleteFile" parameterType="Long">
   /** deleteFile : file 1개 삭제 */
   	delete 	
   	from 
   		public.fb_file 
   	where 
   		file_id = #{value}
   </delete>
   
   
   <update id="renameNode" parameterType="FbNode">
    /* renameFbNode : node의 이름을 바꾼다.*/
   	update 
   		public.fb_node 
   	set 
   		node_name = #{nodeName} 
   	where 
   		node_id = #{nodeId} 
   </update>
   
   
   
   <select id="countFilesInNode" resultType="Integer">
   /** countFilesInNode : node안에 있는 파일갯수 */
   	select count(*) as cnt from fb_file where node_id  = #{value}; 
   </select>
   
   <delete id="deleteNode" parameterType="Long">
   	 /* deleteNode */
   	 delete from fb_node 
   	 where node_id  = #{value}; 
   </delete>
   
   <update id="moveNode" parameterType="FbNode">
   	 /* moveNode : parent id를 새로 설정 */
   	 update public.fb_node 
   	 set parent_id = #{parentId}
   	 where node_id = #{nodeId} 
   </update>
   

   

   


</mapper>