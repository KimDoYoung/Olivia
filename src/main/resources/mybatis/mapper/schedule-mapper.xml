<!-- src/main/resources/mapper/ScheduleMapper.xml -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.kalpa.olivia.repository.ScheduleRepository">
   
    <select id="selectSchedule" resultType="Schedule">
        <![CDATA[
        /** selectSchedule : 스케줄리스트를 리턴*/
        SELECT 
        	  lunar_or_solar AS lunarOrSolar
        	, repeat_option AS repeatOption
        	, ymd AS ymd
        	, content AS content
        	, created_by AS createdBy
        	, created_on AS createdOn 
        FROM schedule 
        WHERE 1=1
		AND CASE repeat_option 
			WHEN 'S' THEN ymd >= TO_CHAR(CURRENT_DATE, 'YYYYMMDD')
			ELSE TRUE
		END        
        ]]>
    </select>
	
	<insert id="insertSchedule" parameterType="Schedule">
        INSERT INTO public.schedule
        (lunar_or_solar, repeat_option, ymd, "content", created_by, created_on)
        VALUES
        (#{lunarOrSolar}, #{repeatOption}, #{ymd}, #{content}, #{createdBy}, CURRENT_TIMESTAMP)	
	</insert>
    <!-- Update a schedule -->
    <update id="updateSchedule" parameterType="Schedule">
        <![CDATA[
        UPDATE schedule
        SET lunar_or_solar = #{lunarOrSolar},
            repeat_option = #{repeatOption},
            ymd = #{ymd},
            content = #{content},
            created_by = #{createdBy},
            created_on = #{createdOn}
        WHERE id = #{id}
        ]]>
    </update>

    <!-- Delete a schedule by ID -->
    <delete id="deleteScheduleById" parameterType="Long">
        <![CDATA[
        DELETE FROM schedule WHERE id = #{id}
        ]]>
    </delete>

	<!--  *************************************************************************** -->
	<!--  Special day -->
	<!--  *************************************************************************** -->

    <!-- Insert a new special day -->
    <insert id="insertSpecialDay" parameterType="SpecialDay">
    /* insert or update 공휴일, 날짜와 이름이 같은게 있으면 update */
		INSERT INTO public.special_day (loc_date, seq, date_kind, holiday_yn, date_name, created_by, created_on)
		VALUES (#{locDate}, #{seq}, #{dateKind}, #{holidayYn}, #{dateName}, #{createdBy}, current_timestamp)
		ON CONFLICT (loc_date, date_name) DO UPDATE
		SET seq = EXCLUDED.seq,
		    date_kind = EXCLUDED.date_kind,
		    holiday_yn = EXCLUDED.holiday_yn,
		    created_by = EXCLUDED.created_by,
		    created_on = EXCLUDED.created_on    
    </insert>

    <!-- Select all special days -->
    <select id="selectAllSpecialDays" resultType="SpecialDay">
        SELECT 
			loc_date
			,seq
			,date_kind
			,holiday_yn
			,date_name
			,created_by
			,created_on        	 
        FROM 
        	public.special_day
        WHERE 1=1
        		
        ORDER BY
        	loc_date, seq	
    </select>

    <!-- Select a specific special day by locdate and seq -->
    <select id="selectSpecialDay" parameterType="SpecialDay" resultType="SpecialDay">
        SELECT * FROM public.special_day
        WHERE loc_date = #{locDate} AND seq = #{seq}
    </select>

    <!-- Update a special day by locdate and seq -->
    <update id="updateSpecialDay" parameterType="SpecialDay">
        UPDATE public.special_day
        SET date_kind = #{dateKind}, holiday_yn = #{holidayYn}, date_name = #{dateName}
        WHERE loc_date = #{locDate} AND seq = #{seq}
    </update>

    <!-- Delete a special day by locdate and seq -->
    <delete id="deleteSpecialDay" parameterType="SpecialDay">
        DELETE FROM public.special_day
        WHERE loc_date = #{locDate} AND seq = #{seq}
    </delete>

    <!-- 양력음력 테이블 추가 -->
    <update id="insertLunarCalendar" parameterType="LunarCalendar">
    	/* insertLunarCalendar 양력음력 달력 UPSERT */
		INSERT INTO public.lunar_calendar (solar_ymd, lunar_ymd)
		VALUES (#{solarYmd}, #{lunarYmd})
		ON CONFLICT (solar_ymd) 
		DO UPDATE SET lunar_ymd = EXCLUDED.lunar_ymd;
    </update>

    
    <select id="calendarSchedules" parameterType="QueryAttr" resultType="SpecialDay">
    	/* 
    		달력에 필요한 holiday정보, division24정보, 사용자 schedule정보를 가져온다 
    	*/
		WITH scheduleList AS (
		SELECT 
			lunar_or_solar ,
			repeat_option,
			CASE repeat_option 
				WHEN 'S' THEN ymd 
				WHEN 'M' THEN concat(substring(#{startYmd},1,6),ymd)
				WHEN 'Y' THEN concat(substring(#{startYmd},1,4),ymd)
			END ymd1,
			"content" 
		FROM public.schedule A 
		)
		SELECT 
		'S' AS dateKind
		, B.solar_ymd  AS locDate 
		,A.CONTENT AS dateName
		FROM 
			scheduleList A LEFT OUTER JOIN lunar_calendar B ON 
			CASE A.lunar_or_solar WHEN 'M' THEN A.ymd1 = B.lunar_ymd ELSE A.ymd1 = B.solar_ymd END
		WHERE 
			B.solar_ymd BETWEEN #{startYmd} AND #{endYmd}
		UNION 
		SELECT 
		 CASE date_kind WHEN '01' THEN 'H' ELSE 'D' END AS dateKind,
		 loc_date AS locDate,
		 date_name AS dateName
		FROM special_day  
		WHERE 
		  loc_date  BETWEEN #{startYmd} AND #{endYmd}
    </select>

	
</mapper>
